"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[303],{3905:function(e,n,t){t.d(n,{Zo:function(){return l},kt:function(){return d}});var o=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var a=o.createContext({}),c=function(e){var n=o.useContext(a),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},l=function(e){var n=c(e.components);return o.createElement(a.Provider,{value:n},e.children)},f={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},u=o.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,a=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),u=c(t),d=r,m=u["".concat(a,".").concat(d)]||u[d]||f[d]||i;return t?o.createElement(m,s(s({ref:n},l),{},{components:t})):o.createElement(m,s({ref:n},l))}));function d(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,s=new Array(i);s[0]=u;var p={};for(var a in n)hasOwnProperty.call(n,a)&&(p[a]=n[a]);p.originalType=e,p.mdxType="string"==typeof e?e:r,s[1]=p;for(var c=2;c<i;c++)s[c]=t[c];return o.createElement.apply(null,s)}return o.createElement.apply(null,t)}u.displayName="MDXCreateElement"},5303:function(e,n,t){t.r(n),t.d(n,{assets:function(){return l},contentTitle:function(){return a},default:function(){return d},frontMatter:function(){return p},metadata:function(){return c},toc:function(){return f}});var o=t(3117),r=t(102),i=(t(7294),t(3905)),s=["components"],p={title:"Maze"},a="A simple generator of perfect mazes",c={unversionedId:"python/maze",id:"python/maze",title:"Maze",description:"",source:"@site/docs/python/maze.md",sourceDirName:"python",slug:"/python/maze",permalink:"/synopsis/python/maze",draft:!1,editUrl:"https://github.com/lebalz/blog/edit/main/docs/python/maze.md",tags:[],version:"current",frontMatter:{title:"Maze"},sidebar:"tutorialSidebar",previous:{title:"Links",permalink:"/synopsis/links"},next:{title:"Some turtles",permalink:"/synopsis/python/turtle"}},l={},f=[],u={toc:f};function d(e){var n=e.components,t=(0,r.Z)(e,s);return(0,i.kt)("wrapper",(0,o.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"a-simple-generator-of-perfect-mazes"},"A simple generator of perfect mazes"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-py"},"from random import choice\n\nDIM_X = 31\nDIM_Y = 21\nfield = []\nfor x in range(0, DIM_Y):\n    row = []\n    for y in range(0, DIM_X):\n        row.append(1)\n    field.append(row)\n\n    \npos = [1, 1]\n\npositions = [pos]\npos_pointer = 0\nfinished = False\n\nfield[pos[0]][pos[1]] = 0\nwhile not finished:\n    options = [1, 2, 3, 4]\n    success = False\n    while len(options) > 0 and not success:\n        direction = choice(options)\n        if direction == 1:\n            if pos[1] - 2 > 0 and field[pos[0]][pos[1] - 2] == 1:\n                 field[pos[0]][pos[1] - 1] = 0\n                 pos = [pos[0], pos[1] - 2]\n                 success = True\n            else:\n                options.remove(1)\n        elif direction == 2:\n            if pos[0] + 2 < DIM_Y and field[pos[0] + 2][pos[1]] == 1:\n                 field[pos[0] + 1][pos[1]] = 0\n                 pos = [pos[0] + 2, pos[1]]\n                 success = True\n            else:\n                options.remove(2)\n        elif direction == 3:\n            if pos[1] + 2 < DIM_X and field[pos[0]][pos[1] + 2] == 1:\n                 field[pos[0]][pos[1] + 1] = 0\n                 pos = [pos[0], pos[1] + 2]\n                 success = True\n            else:\n                options.remove(3)\n        elif direction == 4:\n            if pos[0] - 2 > 0 and field[pos[0] - 2][pos[1]] == 1:\n                 field[pos[0] - 1][pos[1]] = 0\n                 pos = [pos[0] - 2, pos[1]]\n                 success = True\n            else:\n                options.remove(4)\n    if success:\n        positions.append(pos)\n        field[pos[0]][pos[1]] = 0\n        pos_pointer = len(positions) - 1\n    elif pos_pointer > 0:\n        pos_pointer = pos_pointer - 1\n        pos = positions[pos_pointer]\n    else:\n        finished = True\n        print('Done')\n    \nfor i in field:\n    for j in i:\n        if j == 1:\n            print(' x ', end='')\n        else:\n            print(' . ', end='')\n    print('')\n")))}d.isMDXComponent=!0}}]);