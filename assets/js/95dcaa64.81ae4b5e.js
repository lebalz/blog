"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[225],{3905:function(e,n,t){t.d(n,{Zo:function(){return s},kt:function(){return k}});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function d(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=r.createContext({}),u=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):d(d({},n),e)),t},s=function(e){var n=u(e.components);return r.createElement(l.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},c=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),c=u(t),k=o,m=c["".concat(l,".").concat(k)]||c[k]||p[k]||a;return t?r.createElement(m,d(d({ref:n},s),{},{components:t})):r.createElement(m,d({ref:n},s))}));function k(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,d=new Array(a);d[0]=c;var i={};for(var l in n)hasOwnProperty.call(n,l)&&(i[l]=n[l]);i.originalType=e,i.mdxType="string"==typeof e?e:o,d[1]=i;for(var u=2;u<a;u++)d[u]=t[u];return r.createElement.apply(null,d)}return r.createElement.apply(null,t)}c.displayName="MDXCreateElement"},1609:function(e,n,t){t.r(n),t.d(n,{assets:function(){return s},contentTitle:function(){return l},default:function(){return k},frontMatter:function(){return i},metadata:function(){return u},toc:function(){return p}});var r=t(7462),o=t(3366),a=(t(7294),t(3905)),d=["components"],i={},l="Node RED",u={unversionedId:"dokku/node-red/index",id:"dokku/node-red/index",title:"Node RED",description:"Instructions to set up with Docker from nodered.org",source:"@site/docs/dokku/node-red/index.md",sourceDirName:"dokku/node-red",slug:"/dokku/node-red/",permalink:"/synopsis/dokku/node-red/",editUrl:"https://github.com/lebalz/blog/edit/main/docs/dokku/node-red/index.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Letsencrypt",permalink:"/synopsis/dokku/letsencrypt"},next:{title:"Umami",permalink:"/synopsis/dokku/umami"}},s={},p=[{value:"Preparing dokku and deploy the image",id:"preparing-dokku-and-deploy-the-image",level:2},{value:"Configure <code>settings.js</code>",id:"configure-settingsjs",level:2},{value:"Update",id:"update",level:2}],c={toc:p};function k(e){var n=e.components,t=(0,o.Z)(e,d);return(0,a.kt)("wrapper",(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"node-red"},"Node RED"),(0,a.kt)("p",null,"Instructions to set up with Docker from ",(0,a.kt)("a",{parentName:"p",href:"https://nodered.org/docs/getting-started/docker"},"nodered.org")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'docker run -it \\\n-p 1880:1880 \\\n-v node_red_data:/data \\\n-e "NODE_RED_CREDENTIAL_SECRET=your_secret_goes_here" \\\n--name mynodered \\\nnodered/node-red\n')),(0,a.kt)("p",null,"The instructions state that"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"the runner requires a directory ",(0,a.kt)("inlineCode",{parentName:"li"},"node_rad_data")," to be mounted"),(0,a.kt)("li",{parentName:"ul"},"it listens on port ",(0,a.kt)("inlineCode",{parentName:"li"},"1880")),(0,a.kt)("li",{parentName:"ul"},"a user-friendly name used for your node is given"),(0,a.kt)("li",{parentName:"ul"},"the docker name"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://hub.docker.com/r/nodered/node-red/"},"nodered/node-red")," the image name")),(0,a.kt)("h2",{id:"preparing-dokku-and-deploy-the-image"},"Preparing dokku and deploy the image"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'dokku apps:create node-red\n\n# create data dir\nmkdir -p /var/lib/dokku/data/storage/node-red/data\n# make sure you set the correct user permission\nchown -R 1000:1000 /var/lib/dokku/data/storage/node-red/data\n\n# mount the docker socket\ndokku storage:mount node-red /var/lib/dokku/data/storage/node-red/data:/data\n\n# change port mapping and set domain\ndokku proxy:ports-add node-red http:80:1880\ndokku domains:add node-red red.lebalz.ch\n\n# set a friendly name\ndokku docker-options:add node-red deploy "--name mynodered"\ndokku docker-options:add node-red run "--name mynodered"\n\n# optional: set email for letsencrypt\ndokku config:set --no-restart node-red DOKKU_LETSENCRYPT_EMAIL=foo@bar.ch\n\n# deploy\ndokku git:from-image node-red nodered/node-red:latest\n\n# optional: letsencrypt\ndokku letsencrypt node-red\n')),(0,a.kt)("h2",{id:"configure-settingsjs"},"Configure ",(0,a.kt)("inlineCode",{parentName:"h2"},"settings.js")),(0,a.kt)("p",null,"To enable e.g. password authentication, edit the default ",(0,a.kt)("inlineCode",{parentName:"p"},"settings.js")," by uncommenting the ",(0,a.kt)("inlineCode",{parentName:"p"},"adminAuth")," field. Generate a hashed password by using the ",(0,a.kt)("a",{parentName:"p",href:"https://nodered.org/docs/user-guide/node-red-admin"},"node-red-admin")," cli tool locally on your computer:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"npm install -g --unsafe-perm node-red-admin\nnode-red-admin hash-pw\n")),(0,a.kt)("p",null,"Then edit the ",(0,a.kt)("inlineCode",{parentName:"p"},"settings.js")," on your mounted directory:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"bash /var/lib/dokku/data/storage/node-red/data/settings.js\n")),(0,a.kt)("p",null,"... edit the ",(0,a.kt)("inlineCode",{parentName:"p"},"adminAuth")," section:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},' adminAuth: {\n    type: "credentials",\n    users: [{\n        username: "admin",\n        password: "36422f0d25181b32ac0e41e4c11c62985914f3a27b1d682bbcc33735c3cb1b28", /* hashed pw */\n        permissions: "*"\n    }]\n},\n')),(0,a.kt)("p",null,"and redeploy dokku instance"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"dokku ps:rebuild node-red\n")),(0,a.kt)("h2",{id:"update"},"Update"),(0,a.kt)("p",null,"If you deployed ",(0,a.kt)("inlineCode",{parentName:"p"},":latest"),", then you would need to run"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"docker pull nodered/node-red:latest\ndokku ps:rebuild node-red\n")),(0,a.kt)("p",null,"Available tags:\nTo update to a specific version (e.g. ",(0,a.kt)("inlineCode",{parentName:"p"},"2.2.2-12"),") lookup the tags on ",(0,a.kt)("a",{parentName:"p",href:"https://hub.docker.com/r/nodered/node-red/tags"},"nodered/node-red/tags")," and run on your dokku server:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"dokku git:from-image node-red nodered/node-red:2.2.2-12\n")),(0,a.kt)("p",null,"The application will be rebuilt automatically."))}k.isMDXComponent=!0}}]);