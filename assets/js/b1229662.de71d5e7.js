"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[4556],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return m}});var r=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,l=function(e,t){if(null==e)return{};var n,r,l={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var p=r.createContext({}),u=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=u(e.components);return r.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,l=e.mdxType,a=e.originalType,p=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),d=u(n),m=l,k=d["".concat(p,".").concat(m)]||d[m]||c[m]||a;return n?r.createElement(k,i(i({ref:t},s),{},{components:n})):r.createElement(k,i({ref:t},s))}));function m(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var a=n.length,i=new Array(a);i[0]=d;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:l,i[1]=o;for(var u=2;u<a;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},9115:function(e,t,n){n.r(t),n.d(t,{assets:function(){return s},contentTitle:function(){return p},default:function(){return m},frontMatter:function(){return o},metadata:function(){return u},toc:function(){return c}});var r=n(3117),l=n(102),a=(n(7294),n(3905)),i=["components"],o={},p="Firewall and UDP",u={unversionedId:"unix/firewall-udp",id:"unix/firewall-udp",title:"Firewall and UDP",description:"\ud83d\udc49 https://www.heise.de/hintergrund/Wie-Skype-Co-Firewalls-umgehen-270856.html",source:"@site/docs/unix/firewall-udp.md",sourceDirName:"unix",slug:"/unix/firewall-udp",permalink:"/synopsis/unix/firewall-udp",draft:!1,editUrl:"https://github.com/lebalz/blog/edit/main/docs/unix/firewall-udp.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"DNS",permalink:"/synopsis/unix/dns"},next:{title:"Format USB Drive",permalink:"/synopsis/unix/format-usb"}},s={},c=[{value:"Disable bound port 53 from systemd",id:"disable-bound-port-53-from-systemd",level:2},{value:"Hetzner Server",id:"hetzner-server",level:2},{value:"Step 1: Create 2 Hetzner Servers",id:"step-1-create-2-hetzner-servers",level:3},{value:"Step 2: Let them talk",id:"step-2-let-them-talk",level:3},{value:"Step 3: Create a Firewall",id:"step-3-create-a-firewall",level:3},{value:"Step 4: Screw a hole into the firewall",id:"step-4-screw-a-hole-into-the-firewall",level:3}],d={toc:c};function m(e){var t=e.components,n=(0,l.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"firewall-and-udp"},"Firewall and UDP"),(0,a.kt)("p",null,"\ud83d\udc49 ",(0,a.kt)("a",{parentName:"p",href:"https://www.heise.de/hintergrund/Wie-Skype-Co-Firewalls-umgehen-270856.html"},"https://www.heise.de/hintergrund/Wie-Skype-Co-Firewalls-umgehen-270856.html")),(0,a.kt)("h2",{id:"disable-bound-port-53-from-systemd"},"Disable bound port 53 from systemd"),(0,a.kt)("p",null,"\ud83d\udc49 ",(0,a.kt)("a",{parentName:"p",href:"https://www.linuxuprising.com/2020/07/ubuntu-how-to-free-up-port-53-used-by.html"},"https://www.linuxuprising.com/2020/07/ubuntu-how-to-free-up-port-53-used-by.html")),(0,a.kt)("h2",{id:"hetzner-server"},"Hetzner Server"),(0,a.kt)("p",null,"CLoud-Config, copy/paste to the cloud console"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yml"},'#cloud-config\n\npackages:\n  - hping3\npackage_update: true\n\nruncmd:\n  - printf "[Resolve]\\nDNS=1.1.1.1\\nFallbackDNS=8.8.8.8\\nDNSStubListener=no\\n" > /etc/systemd/resolved.conf\n  - ln -sf /run/systemd/resolve/resolv.conf /etc/resolv.conf\n  - reboot now\n')),(0,a.kt)("h3",{id:"step-1-create-2-hetzner-servers"},"Step 1: Create 2 Hetzner Servers"),(0,a.kt)("p",null,"Create 2 servers with it, e.g.: ",(0,a.kt)("inlineCode",{parentName:"p"},"local")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"remote"),"."),(0,a.kt)("h3",{id:"step-2-let-them-talk"},"Step 2: Let them talk"),(0,a.kt)("p",null,"Ensure, both can"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"ping each other"),(0,a.kt)("li",{parentName:"ul"},"can connect ovr natcat (",(0,a.kt)("inlineCode",{parentName:"li"},"nc"),"):")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'# local - ip:  65.21.252.60\nnc -u -l -p 14141\n\n# remote - ip: 157.90.232.190\necho "hello" | nc -p 53 -u 65.21.252.60 14141\n')),(0,a.kt)("p",null,'--\x3e this shall output "hello" on ',(0,a.kt)("inlineCode",{parentName:"p"},"local"),"s terminal"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"local")," nc command explained"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"-u")," use ",(0,a.kt)("inlineCode",{parentName:"li"},"UDP")," Protocol"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"-l")," listen for incoming connections"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"-p")," the port on which ",(0,a.kt)("inlineCode",{parentName:"li"},"nc")," listens")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"remote")," nc command explained"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"-p")," the destination port: ",(0,a.kt)("inlineCode",{parentName:"li"},"53")," is used for ",(0,a.kt)("inlineCode",{parentName:"li"},"UDP")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"-u")," use ",(0,a.kt)("inlineCode",{parentName:"li"},"UDP")," Protocol"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"65.21.252.60")," the ip address of the destination (",(0,a.kt)("inlineCode",{parentName:"li"},"local"),")")),(0,a.kt)("h3",{id:"step-3-create-a-firewall"},"Step 3: Create a Firewall"),(0,a.kt)("p",null,"Create with Hetzner a Firewall in front of the ",(0,a.kt)("inlineCode",{parentName:"p"},"local")," Server"),(0,a.kt)("p",null,"Ensure, that now the example above does not work anymore."),(0,a.kt)("h3",{id:"step-4-screw-a-hole-into-the-firewall"},"Step 4: Screw a hole into the firewall"),(0,a.kt)("p",null,"Open a second console on ",(0,a.kt)("inlineCode",{parentName:"p"},"local")," and create with ",(0,a.kt)("inlineCode",{parentName:"p"},"hping3")," a packet for the ",(0,a.kt)("inlineCode",{parentName:"p"},"remote")," server.\nBecause the request is now outgoing, the firewall let's it pass through and waits for responses.\nClearly no answer is received, since on the ",(0,a.kt)("inlineCode",{parentName:"p"},"remote")," no UDP service is listening on port ",(0,a.kt)("inlineCode",{parentName:"p"},"53"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"# local/2  - ip:  65.21.252.60\nhping3 --count 1 --udp --baseport 14141 -p 53 157.90.232.190\n")),(0,a.kt)("p",null,"explanation:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"--count")," (",(0,a.kt)("inlineCode",{parentName:"li"},"-c"),") number of packets to send"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"--udp")," (",(0,a.kt)("inlineCode",{parentName:"li"},"-2"),") use ",(0,a.kt)("inlineCode",{parentName:"li"},"udp")," protocol (",(0,a.kt)("inlineCode",{parentName:"li"},"0"),": raw ip mode"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"--baseport")," (",(0,a.kt)("inlineCode",{parentName:"li"},"-s"),") the outgoing port to use - it must be the one where ",(0,a.kt)("inlineCode",{parentName:"li"},"nc"),"is listening"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"-p")," destination port: udp port ",(0,a.kt)("inlineCode",{parentName:"li"},"53"))),(0,a.kt)("p",null,'now try again and the "hello" shall appear \ud83e\udd73'))}m.isMDXComponent=!0}}]);